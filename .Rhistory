valor_a
# calculando a soma de todos os elementos lista1 com sapply()
?sapply
sapply(lista1, sum)
sapply(lista1, mean)
x <- matrix(c(20, 13, 65, 32, 45, 12, 76, 49, 82), nr = 3, byrow = T)
x
apply(x, mean)
apply(x, 1, mean) # calcular a media para cada linha
apply(x, 2, mean) # calcular a media para cada coluna
apply(x, 1, plot)
resultapply <- apply(x, 1, mean)
resultapply
escola <- data.frame(Aluno = c('Bob', 'Tereza', 'Marta', 'Felipe', 'Zacarias', 'Elton'),
Fisica = c(91, 82, 75, 97, 62, 74),
Matematica = c(99, 100, 86, 92, 91, 87),
Quimica = c(56, 72, 49, 68, 59, 77))
escola
escola$Matematica
View(escola)
View(escola$Matematica)
# Calculando a media por aluno
escola$Media = NA
escola
escola$Media = apply(escola, 1, mean)
escola$Media = apply(escola[, c(2,3,4)], 1, mean) #,] antes da virgula vazio indica todas as linhas e depois um vetor escolhendo quais colunas usar
escola
escola$Media = round(escola$Media)
escola
gols <- data.frame(Jogadores = c('Messi', 'CR7', 'Lewa', 'Neymar', 'Ibra'),
Ano2019 = c(60, 55, 51, 35, 42),
Ano2020 = c(57, 56, 54, 29, 25),
Ano2021 = c(50, 45, 50, 25, 20),
Ano2022 = c(45, 28, 49, 30, 22))
gols
gols$Media = apply(gols[, c(2,3,4,5)], 1, mean)
gols
gols$Total = apply(gols[, c(2,3,4,5), 1, sum])
gols$Total = apply(gols[, c(2,3,4,5)], 1, sum)
gols
gols$Media = apply(gols[2, c(2,3,4,5)], 1, mean)
gols
gols <- data.frame(Jogadores = c('Messi', 'CR7', 'Lewa', 'Neymar', 'Ibra'),
Ano2019 = c(60, 55, 51, 35, 42),
Ano2020 = c(57, 56, 54, 29, 25),
Ano2021 = c(50, 45, 50, 25, 20),
Ano2022 = c(45, 28, 49, 30, 22))
gols
gols$Media = apply(gols[2, c(2,3,4,5)], 1, mean)
gols$Media = round(gols$Media)
gols
gols$Total = apply(gols[, c(2,3,4,5)], 1, sum)
gols
gols$Media = apply(gols[, c(2,3,4,5)], 1, mean)
gols$Media = round(gols$Media)
gols
gols$Total = apply(gols[, c(2,3,4,5)], 1, sum)
gols
gols$Total = apply(gols[2, c(2,3,4,5)], 1, sum)
gols
# gols$Total = apply(gols[2, c(2,3,4,5)], 1, sum) usa só a linha 2
gols$Total = apply(gols[, c(2,3,4,5)], 1, sum)
gols
?gl
teste = gl(5, 5, labels = paste("Equipe"), LETTERS[1:5])
teste = gl(5, 5, labels = paste("Equipe",  LETTERS[1:5]))
teste
teste = paste('equioe', LETTERS[1:3])
teste
?paste
paste[1:12]
paste(1:12)
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runnif(25, min=0, max=50)))
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
View(tabela_basquete)
summary(tabela_basquete)
View(tabela_basquete)
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 35),
num_cestas = floor(runif(25, min=0, max=50)))
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
View(tabela_basquete)
summary(tabela_basquete)
?by
install.packages('sqldf')
library(sqldf)
sqldf()
?floor
gols$Media = apply(gols[, c(2:5)], 1, mean)
gols$Media = round(gols$Media)
gols
pais = c('Portugal', 'Inglaterra', 'Irlanda', 'Egito', 'Brasil')
nome = c('Bruno', 'Tiago', 'Amanda', 'Bianca', 'Marta')
altura = c(1.88, 1.76, 1.53, 1.69, 1.68)
codigo = c(5001, 2183, 4702, 7965, 8890)
pesquisa = data.frame(pais, nome, altura, codigo)
pesquisa
olhos = c('verde', 'azul', 'azul', 'castanho', 'castanho')
pesq = cbind(pesquisa, olhos) # une dataframe pesquisa com olhos em pesq a nivel de coluna
pesq
str(pesq)
teste2
teste2 = c(15,30,30)
teste2
sum(teste2)
novos_gols = c(20, 15, 18, 17, 33, 21)
rbind(gols, 'Gabi', novos_gols, sum(novos_gols))
gols <- data.frame(Jogadores = c('Messi', 'CR7', 'Lewa', 'Neymar', 'Ibra'),
Ano2019 = c(60, 55, 51, 35, 42),
Ano2020 = c(57, 56, 54, 29, 25),
Ano2021 = c(50, 45, 50, 25, 20),
Ano2022 = c(45, 28, 49, 30, 22))
gols
gols$Media = apply(gols[, c(2,3,4,5)], 1, mean) # gols$Media = apply(gols[, c(2:5)], 1, mean)
gols$Media = round(gols$Media)
gols
# gols$Total = apply(gols[2, c(2,3,4,5)], 1, sum) usa só a linha 2
gols$Total = apply(gols[, c(2,3,4,5)], 1, sum)
gols
gols_gabi <- data.frame(Jogadores = c('Gabi'),
Ano2019 = c(17),
Ano2020 = c(19),
Ano2021 = c(33),
Ano2022 = c(21))
rbind(gols, gols_gabi)
teste_gols = c(17,19,33,21)
gols_gabi <- data.frame(Jogadores = c('Gabi'),
17,
19,
33,
21, sum(teste_gols))
rbind(gols, gols_gabi)
escola <- data.frame(Aluno = c('Bob', 'Tereza', 'Marta', 'Felipe', 'Zacarias', 'Elton'),
Fisica = c(91, 82, 75, 97, 62, 74),
Matematica = c(99, 100, 86, 92, 91, 87),
Quimica = c(56, 72, 49, 68, 59, 77))
escola
View(escola)
escola$Matematica
# Calculando a media por aluno
escola$Media = NA # add coluna Media
escola
escola$Media = apply(escola[, c(2,3,4)], 1, mean) #,] antes da virgula vazio indica usar as linhas e depois um vetor escolhendo quais colunas usar
escola
escola$Media = round(escola$Media)
escola
# Calculando a media e soma dos gols
gols <- data.frame(Jogadores = c('Messi', 'CR7', 'Lewa', 'Neymar', 'Ibra'),
Ano2019 = c(60, 55, 51, 35, 42),
Ano2020 = c(57, 56, 54, 29, 25),
Ano2021 = c(50, 45, 50, 25, 20),
Ano2022 = c(45, 28, 49, 30, 22))
gols
gols$Media = apply(gols[, c(2,3,4,5)], 1, mean) # gols$Media = apply(gols[, c(2:5)], 1, mean)
gols$Media = round(gols$Media)
gols
# gols$Total = apply(gols[2, c(2,3,4,5)], 1, sum) usa só a linha 2
gols$Total = apply(gols[, c(2,3,4,5)], 1, sum)
gols
# tapply()
?gl # gera níveis de fator
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
View(tabela_basquete) # dataframe gerado com 5 equipes (a, b, c, d, e) onde cada equipe tem 5 jogadores nomeados aleatoriamente por letras
summary(tabela_basquete)
# by
?by
sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
system.time(sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe'))
sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf
tapply(tabela_basquete$num_cestas, tabela_basquete$equipe, sum)
tapply(tabela_basquete$num_cestas, tabela_basquete$equipe, sum)
tapply(tabela_basquete$num_cestas, tabela_basquete$equipe, mean)
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
View(tabela_basquete) # dataframe gerado com 5 equipes (a, b, c, d, e) onde cada equipe tem 5 jogadores nomeados aleatoriamente por letras
summary(tabela_basquete)
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf
gc()
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf
gc()
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf
View(tabela_basquete) # dataframe gerado com 5 equipes (a, b, c, d, e) onde cada equipe tem 5 jogadores nomeados aleatoriamente por letras
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
View(tabela_basquete) # dataframe gerado com 5 equipes (a, b, c, d, e) onde cada equipe tem 5 jogadores nomeados aleatoriamente por letras
summary(tabela_basquete)
library(sqldf)
sqldf('DROP TABLE tabela_basquete')
tabela_basquete <- data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
total_cestas_sqldf <- sqldf('select equipe, sum(num_cestas) from tabela_basquete group by equipe')
total_cestas_sqldf
tapply(tabela_basquete$num_cestas, tabela_basquete$equipe, sum)
tapply(tabela_basquete$num_cestas, tabela_basquete$equipe, mean)
# by()
?by
species=c(rep(c(1,2,3), each=5))
# by()
?by
dat <- data.frame(species=c(rep(c(1,2,3), each=5)),
petal.length=c(rnorm(5, 4.5, 1),
rnorm(5, 4.5, 1),
rnorm(5, 4.5, 1)),
petal.width=c(rnorm(5, 2.5, 1),
rnorm(5, 2.5, 1),
rnorm(5, 4, 1)))
dat
View(dat)
dat$species <- factor(dat$species)
View(dat)
testando = c(rep(c(1,2,3)))
testando
testando = c(rep(c(1,2,3), each=5))
testando
testando2 = petal.length
testando.length = c(rnorm(5, 4.5, 1))
testando.length
?rnorm
testando.length = c(rnorm(1, 4.5, 1))
testando.length
testando.length = c(rnorm(2, 4.5, 1))
testando.length
testando.length = c(rnorm(2, 1.5, 1))
testando.length
testando.length = c(rnorm(2, 1, 1))
testando.length
testando.length = c(rnorm(2, 0, 1))
testando.length
testando.length = c(rnorm(2, 10, 1))
testando.length
testando.length = c(rnorm(2, 10, 3))
testando.length
View(dat)
dat$species <- factor(dat$species)
View(dat)
by(dat, dat$species, function(x){
mean.pl <- mean(x$petal.length)
})
View(dat)
by(dat, dat$species, function(x){
mean <- mean(x$petal.length)
})
by(dat, dat$species, function(x){
mean <- mean(x$petal.length)
})
by(dat, dat$species, function(x){
mean.petal <- mean(x$petal.length)
})
?lapply
?lapply
lista1 <- list(a = (1:20), b = (45:77))
lista1
lista1 <- list(a = (1:20), b = (45:77))
lista1
lista1 <- list(a = (1:20), b = (45:77))
lista1
lista1
lista1 <- list(a = (1:20), b = (45:77))
lista1
lapply(lista1, sum)
sapply(lista1, sum)
lapply(lista1, sum)
lapply(lista1, mean)
sapply(lista1, sum)
sapply(lista1, mean)
lapply(lista1, sum)
lapply(lista1, mean)
sapply(lista1, sum)
sapply(lista1, mean)
?vapply
vapply(lista1, fivenum, c(Min. = 0, '1st Qu.' = 0, Median = 0, '3rd Qu.' = 0, Max = 0))
?replicate
?replicate
replicate(7, runif(10))
replicate('bla', runif(10))
replicate(4, runif(10))
replicate(4, runif(1))
replicate(4, runif(10))
mapply(rep, 1:4, 4:1)
mapply(rep, 1:4, 2:1)
mapply(rep, 1:4, 2:2)
mapply(rep, 1:4, 2:1)
mapply(rep, 1:4, 2:3)
mapply(rep, 1:4, 1:4)
mapply(rep, 1:4, 1:3)
mapply(rep, 1:4, 1:32)
mapply(rep, 1:4, 1:2)
mapply(rep, 1:4, 1:3)
mapply(rep, 1:4, 1:1)
mapply(rep, 1:4, 1:0)
mapply(rep, 1:4, 4:1)
lista2 <- list(a = c(1:5), b = c(6:10))
lista2
rapply(lista2, sum)
rapply(lista2, sum, how = "list")
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/3.Linguagem-R- Fatores-Estruturas-de-Controle-e-Funcoes")
getwd()
?unlist
lista1 <- lista(6, 'b', 15)
lista1 <- lista(6, 'b', 15)
lista1 <- lista(6, 'b', 15)
lista1 <- list(6, 'b', 15)
lista1
class(lista1)
unlist(lista1)
class(lista1)
vec1 <- unlist(lista1)
class(vec1)
vec1
lista2 <- list(v1 = 6, v2 = list(381, 2190), v3 = c(30, 217))
lista2
unlist(lista2)
mean(unlist(lista2))
round(mean(unlist(lista2)))
lista1 <- list(6, 'b', 15)
gc()
?unlist
lista1 <- list(6, 'b', 15)
lista1
class(lista1)
unlist(lista1)
class(vec1)
vec1 <- unlist(lista1)
class(vec1)
vec1
lista2 <- list(v1 = 6, v2 = list(381, 2190), v3 = c(30, 217))
lista2
unlist(lista2)
mean(unlist(lista2))
round(mean(unlist(lista2)))
?do.call
data <- list()
data <- list()
N <- 100
for (n in 1:N) {
data[[n]] = data.frame(index = n,
char = sample(letters, 1),
z - rnorm(1)
)
}
for (n in 1:N) {
data[[n]] = data.frame(index = n,
char = sample(letters, 1),
z = rnorm(1)
)
}
head(data)
for (n in 1:N) {
print(data[[n]] = data.frame(index = n,
for (n in 1:N) {
data[[n]] = data.frame(index = n,
char = sample(letters, 1),
z = rnorm(1)
)
}
for (n in 1:N) {
data.frame(index = n,
char = sample(letters, 1),
z = rnorm(1)
)
}
data.frame(index = n,
char = sample(letters, 1),
z = rnorm(1)
)
for (n in 1:N) {
data[[n]] = data.frame(index = n,
char = sample(letters, 1),
z = rnorm(1)
)
}
head(data)
data
?rbind
do.call(rbind, data)
do.call(rbind, data)
class(do.call(rbind, data))
y <- list(1:3, 4:6, 7:9)
y
lapply(y, sum)
do.call(sum, y)
install.packages('plyr')
library(plyr)
y <- list(1:3, 4:6, 7:9)
y
ldply(y, sum)
strsplit(texto, ' ')
texto <- 'Data Science Academy'
strsplit(texto, ' ')
texto
strsplit(texto, ' ')
texto <- 'Data Science Academy'
texto
strsplit(texto, '')
dates <- c('1998-05-23', '2008-12-30', '2009-11-29')
dates <- c('1998-05-23', '2008-12-30', '2009-11-29')
dates
temp <- strsplit(dates, '-')
temp
class(temp)
matrix(unlist(temp), ncol = 3, byrow = TRUE)
matrix(unlist(temp))
matrix(temp)
matrix(unlist(temp))
matrix(unlist(temp), ncol = 3, byrow = TRUE)
matrix(unlist(temp), ncol = 3, byrow = FALSE)
matrix(unlist(temp), ncol = 4, byrow = TRUE)
matrix(unlist(temp), ncol = 2, byrow = TRUE)
matrix(unlist(temp), ncol = 5, byrow = TRUE)
matrix(unlist(temp), ncol = 3, byrow = TRUE)
temp_matriz <- matrix(unlist(temp))
temp_matriz
temp_matriz <- matrix(unlist(temp), ncol = 3, byrow = TRUE)
temp_matriz
names <- c('Brian; Sergey', 'Page, Larry',
'Dorsey, Jack', 'Glass, Noah',
'Williams, Evan', 'Stone, Biz')
names
names <- c('Brian, Sergey', 'Page, Larry',
'Dorsey, Jack', 'Glass, Noah',
'Williams, Evan', 'Stone, Biz')
names
temp <- strsplit(names, ', ')
temp
length(temp)
temp_matriz <- matrix(unlist(temp), ncol = 6, byrow = TRUE)
temp_matriz
temp_matriz <- matrix(unlist(temp), ncol = 6)
temp_matriz
frase <- 'Muitas vezes temos que repetir algo diversas vezes e essas diversas vezes parecem algo estranho'
frase
palavras <- strsplit(frase, ' ')
palavras
palavras <- strsplit(frase, ' ')[[1]]
palavras
palavras <- strsplit(frase, ' ')[[2]]
palavras
palavras <- strsplit(frase, ' ')[[0]]
palavras
palavras <- strsplit(frase, ' ')
palavras
palavras <- strsplit(frase, ' ')[[1]]
palavras
unique(tolower(palavras)) # deixando tudo minusculo e retirando palavras repetidas
antes = data.frame(attr = c(1,30,4,6), tipo = c('pao_e_agua', 'pao_e_agua_2'))
antes
strsplit(as.character(antes$tipo), '_e_')
library(stringr)
str_split_fixed(antes$tipo, '_e_')
str_split_fixed(antes$tipo, '_e_', 3)
str_split_fixed(antes$tipo, '_e_', 1)
str_split_fixed(antes$tipo, '_e_', 2)
antes = data.frame(attr = c(1,30,4,6), tipo = c('pao_e_agua', 'pao_e_agua_2'))
antes
depois <- strsplit(as.character(antes$tipo), '_e_')
depois
do.call(rbind, depois)
class(do.call(rbind, depois)) # trasforma a lista em
class(depois)
install.packages('dplyr')
install.packages('tidyr')
library(dplyr)
library(tidyr)
antes <- data.frame(
attr = c(1, 30, 4, 6),
tipo = c('pao_e_agua', 'pao_e_agua_2')
)
antes
antes %>%
antes %>%
separate(tipo, c('pao', 'agua'), '_e_')
antes <- data.frame(
attr = c(1, 30, 4, 6),
tipo = c('pao_e_agua', 'pao_e_agua_2')
)
antes
antes %>%
separate(tipo, c('pao', 'agua'), '_e_')
antes %>%
separate(tipo, c('pao', 'agua'), '_e_')
